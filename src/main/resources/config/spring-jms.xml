<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:amq="http://activemq.apache.org/schema/core"
       xmlns:jms="http://www.springframework.org/schema/jms"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/jms
        http://www.springframework.org/schema/jms/spring-jms-4.1.xsd
         http://activemq.apache.org/schema/core
        http://activemq.apache.org/schema/core/activemq-core-5.8.0.xsd">

    <bean id="jmsConnectionFactory" class="org.apache.activemq.pool.PooledConnectionFactory">
        <property name="connectionFactory">
            <bean class="org.apache.activemq.ActiveMQConnectionFactory">
                <property name="brokerURL" value="tcp://211.157.179.218:61616?jms.prefetchPolicy.all=2" />
                <property name="closeTimeout" value="60000" />
                <property name="userName" value="admin" />
                <property name="password" value="admin_qwe123000" />
                <property name="useAsyncSend" value="true"></property>
                <!--<property name="optimizeAcknowledge" value="true" />-->
                <property name="optimizedAckScheduledAckInterval" value="10000" />
                <property name="maxThreadPoolSize" value="80"></property>
                <property name="redeliveryPolicy" ref="redeliveryPolicyBean"></property>
            </bean>
        </property>
        <property name="reconnectOnException" value="true"></property>
    </bean>

    <!--消息重发机制的配置-->
    <bean id="redeliveryPolicyBean" class="org.apache.activemq.RedeliveryPolicy">
        <property name="useExponentialBackOff" value="true"></property>
        <!--重发次数,默认为6次-->
        <property name="maximumRedeliveries" value="3"></property>
        <!--重发时间间隔,默认为1秒-->
        <property name="initialRedeliveryDelay" value="5000"></property>
        <!--第一次失败后重新发送之前等待500毫秒,第二次失败再等待500 * 2毫秒,这里的2就是value-->
        <property name="backOffMultiplier" value="2"></property>
        <!--最大传送延迟，只在useExponentialBackOff为true时有效（V5.5），假设首次重连间隔为10ms，倍数为2，那么第 二次重连时间间隔为 20ms，第三次重连时间间隔为40ms，当重连时间间隔大的最大重连时间间隔时，以后每次重连时间间隔都为最大重连时间间隔。-->
        <property name="maximumRedeliveryDelay" value="1000"></property>
    </bean>

    <!-- 消息处理器 -->
    <bean id="jmsMessageConverter" class="org.springframework.jms.support.converter.SimpleMessageConverter" />
    <!-- 定义JmsTemplate的Queue类型 -->
    <bean id="jmsQueueTemplate" class="org.springframework.jms.core.JmsTemplate">
        <constructor-arg ref="jmsConnectionFactory" />
        <!-- 非pub/sub模型（发布/订阅），即队列模式 -->
        <property name="pubSubDomain" value="false" />
        <!-- 发送模式  DeliveryMode.NON_PERSISTENT=1:非持久 ; DeliveryMode.PERSISTENT=2:持久-->
        <property name="deliveryMode" value="2"></property>
        <property name="sessionTransacted" value="true"></property>
        <!-- deliveryMode, priority, timeToLive 的开关，要生效，必须配置为true，默认false-->
        <property name="explicitQosEnabled" value="true" />
       <property name="priority" value="2"></property>
        <property name="messageConverter" ref="jmsMessageConverter"></property>
    </bean>

    <!-- 定义JmsTemplate的Topic类型 -->
    <bean id="jmsTopicTemplate" class="org.springframework.jms.core.JmsTemplate">
        <constructor-arg ref="jmsConnectionFactory" />
        <!-- pub/sub模型（发布/订阅） -->
        <property name="pubSubDomain" value="true" />
        <property name="messageConverter" ref="jmsMessageConverter"></property>

    </bean>
    <bean id="jmsListenerContainerFactory" class="org.springframework.jms.config.DefaultJmsListenerContainerFactory">
        <property name="connectionFactory" ref="jmsConnectionFactory"/>
        <property name="transactionManager" ref="jmsTransactionManager" />
        <property name="concurrency" value="2-7"></property>
        <property name="sessionTransacted" value="true" />
    </bean>
    <bean id="jmsTransactionManager" class="org.springframework.jms.connection.JmsTransactionManager">
        <property name="connectionFactory" ref="jmsConnectionFactory"/>
    </bean>
    <!-- 监听注解支持 -->
    <jms:annotation-driven />
</beans>